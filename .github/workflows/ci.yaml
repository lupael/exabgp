# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main, 4.2, 3.4 ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    # runs-on: ubuntu-latest
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        os: ["ubuntu-latest", "ubuntu-20.04"]
        exclude:
          - os: ubuntu-latest
            python-version: "3.6"
          - os: ubuntu-20.04
            python-version: "3.7"
          - os: ubuntu-20.04
            python-version: "3.8"
          - os: ubuntu-20.04
            python-version: "3.9"
          - os: ubuntu-20.04
            python-version: "3.10"
          - os: ubuntu-20.04
            python-version: "3.11"
          - os: ubuntu-20.04
            python-version: "3.12"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: run python version
      run: |
        python --version

    - name: Install dependencies
      run: |
        python -m pip install --no-cache-dir --upgrade pip
        if [ -f requirements.txt ]; then pip install --no-cache-dir -r requirements.txt; fi
        if [ -f qa/requirements.txt ]; then pip install --no-cache-dir -r qa/requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        if [[ $(python3 --version | grep "3.6") ]]; then flake8 . --exclude src/exabgp/vendoring/ --exclude build/ --count --select=E9,F63,F7,F82 --show-source --statistics; fi
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Configuration Parsing Checks
      run: |
        if [[ $(python3 --version | grep -v "3.6") ]]; then ./qa/bin/functional parsing; fi

    - name: Functional Checks
      run: |
        if [[ $(python3 --version | grep -v "3.6") ]]; then ./qa/bin/functional encoding; fi

    - name: Decoding Checks
      run: |
        if [[ $(python3 --version | grep -v "3.6") ]]; then ./qa/bin/functional decoding; fi

    - name: Test Coverage
      run: |
        if [[ $(python3 --version | grep -v "3.6") ]]; then env PYTHONPATH=src exabgp_log_enable=false pytest --cov --cov-reset ./tests/*_test.py; fi

    # disabled until the reason for the test failing is understood
    # - name: Python 3.6 Coverage
    #   run: |
    #     if [[ $(python3 --version | grep "3.6") ]]; then  ./qa/bin/functional-3.6 run; fi

    # - name: Coveralls
    #   run: |
    #     coveralls

#     - name: Test with pytest
#       run: |
#         pytest
